
version: '3.7'

services:

  app-web:
    container_name: frontend-tsc-2021c2
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - TZ=America/Argentina/Buenos_Aires

  db:
    image: "postgres:11.2"
    ports:
      - "5433:5432"
    volumes:
      - pgData:/var/lib/psotgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: db_tsc5
      TZ: America/Argentina/Buenos_Aires
  api:
    container_name: backend-tsc-2021c2
    working_dir: /restify-pg
    entrypoint: ["/bin/bash", "/restify-pg/entrypoint.sh"]
    image: node:14
    ports:
      - "5000:3000"
      - "9229:9229"
    volumes:
      - ./backend:/restify-pg
    environment:
      DB_HOST: db
      NODE_ENV: development
      TZ: America/Argentina/Buenos_Aires

  sonarqube:
    image: sonarqube:community
    depends_on:
      - dbsonar
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://dbsonar:5432/sonartest
      SONAR_JDBC_USERNAME: sonartest
      SONAR_JDBC_PASSWORD: sonartest
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"

  dbsonar:
    image: postgres:12
    environment:
      POSTGRES_DB: sonartest
      POSTGRES_USER: sonartest
      POSTGRES_PASSWORD: sonartest
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
      
  sonarscanner:
    container_name: sonarscanner
    image: sonarsource/sonar-scanner-cli
    depends_on:
      - sonarqube
    volumes:
      - ./:/usr/src
  
volumes:
  pgData:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data: